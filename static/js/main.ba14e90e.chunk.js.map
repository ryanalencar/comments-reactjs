{"version":3,"sources":["components/Comment.js","components/Comments.js","components/NewComment.js","components/Header.js","components/Login.js","components/SignUp.js","components/User.js","firebase.js","App.js","serviceWorker.js","index.js"],"names":["Comment","c","comment","email","className","Comments","comments","keys","Object","map","key","NewComment","state","newComments","empty","handleChange","e","message","target","value","setState","console","log","sendComment","preventDefault","alert","props","onSubmit","this","onChange","type","Component","Header","class","Login","pass","field","event","login","htmlFor","id","placeholder","isAuthError","authError","onClick","changeScreen","SignUp","createAccount","isSignUpError","signUpError","User","logout","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","auth","App","isLoading","isAuth","user","userScreen","ref","child","push","userId","uid","update","a","signInWithEmailAndPassword","code","createUserWithEmailAndPassword","signOut","screen","on","snapshot","val","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.ba14e90e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Comment = ({ c }) => {\r\n    let comment = 'vazio'\r\n    let email = 'vazio'\r\n    \r\n    if (c) {\r\n        if (c.comment && c.email) {\r\n            comment = c.comment\r\n            email = c.email\r\n        } else {\r\n            comment = 'vazioo'\r\n            email = 'vazioo'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            Enviado por: {c.email}\r\n            <br/>\r\n            Comment: {c.comment}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React from 'react';\r\nimport Comment from './Comment';\r\n\r\nconst Comments = ({ comments }) => {\r\n    const keys = Object.keys(comments);\r\n    return (\r\n        <div>\r\n            {/* Comment */}\r\n            {keys.map(key => <Comment c={comments[key]} />)}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Comments","import React, { Component } from 'react'\r\n\r\nclass NewComment extends Component {\r\n    state = {\r\n        newComments: '',\r\n        empty: true,\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        var message = e.target.value\r\n        if (message === '') {\r\n            this.setState({\r\n                empty: true\r\n            })\r\n            console.log(message)\r\n        } else {\r\n            this.setState({\r\n                empty: false,\r\n                newComments: message\r\n            })\r\n            console.log(message)\r\n        }\r\n    }\r\n\r\n    sendComment = (e) => {\r\n        e.preventDefault()\r\n        if (!this.state.empty) {\r\n            this.props.sendComment(this.state.newComments)\r\n            this.setState({\r\n                newComments: '',\r\n                empty: true\r\n            })\r\n        } else {\r\n            this.setState({\r\n                newComments: '',\r\n            })\r\n            return (\r\n                alert('Não é possível enviar mensagens vazias')\r\n            )\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.sendComment}>\r\n                    <textarea className=\"form-control textareaInput\" value={this.state.newComments} onChange={this.handleChange}></textarea>\r\n                    <button className=\"button mb-5 mt-2\" type=\"submit\">Enviar</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewComment","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light mb-4\">\r\n            <div class=\"container\">\r\n                <a class=\"navbar-brand\">CommmentApp</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport Header from './Header'\r\n\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: '',\r\n        pass: '',\r\n    }\r\n\r\n    handleChange = field => event => {\r\n        this.setState({\r\n            [field]: event.target.value,\r\n        })\r\n    }\r\n\r\n    login = () => {\r\n        this.props.login(this.state.email, this.state.pass)\r\n    }\r\n\r\n    render() {\r\n        const errorMensages = {\r\n            'auth/invalid-email': 'E-mail inválido',\r\n            'auth/user-not-found': 'Usuário não encontrado',\r\n            'auth/wrong-password': 'E-mail ou senha inválidos'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center display-4 my-4\">Entre para comentar ou crie uma conta:</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <input type=\"text\" id=\"email\" className=\"form-control\" onChange={this.handleChange('email')} placeholder=\"Digite seu email\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"pass\">Senha:</label>\r\n                            <input type=\"password\" id=\"pass\" className=\"form-control\" onChange={this.handleChange('pass')} placeholder=\"Digite sua senha\" />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.props.isAuthError &&\r\n                        <div class=\"notif notif--error\">\r\n                            <div class=\"notif__content\"><i class=\"material-icons notif__icon\">error</i>\r\n                                <div>\r\n                                    <h1 class=\"notif__title\">Erro ao autenticar</h1>\r\n                                    <span class=\"notif__subtitle\">{errorMensages[this.props.authError]}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"row my-4\">\r\n                        <div className=\"col-2\"></div>\r\n                        <div className=\"col-4\">\r\n                            <button type=\"button\" className=\"button\" onClick={this.login}>Entrar</button>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <button type=\"button\" className=\"button\" onClick={() => this.props.changeScreen('signUp')}>Criar conta</button>\r\n                        </div>\r\n                        <div className=\"col-2\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\nimport Header from './Header'\r\n\r\nclass SignUp extends Component {\r\n    state = {\r\n        email: '',\r\n        pass: '',\r\n    }\r\n\r\n    handleChange = field => event => {\r\n        this.setState({\r\n            [field]: event.target.value\r\n        })\r\n    }\r\n\r\n    createAccount = () => {\r\n        this.props.createAccount(this.state.email, this.state.pass)\r\n    }\r\n\r\n    render() {\r\n        const errorMensages = {\r\n            'auth/invalid-email': 'E-mail inválido',\r\n            'auth/weak-password': 'Senha fraca',\r\n            'auth/email-already-in-use': 'E-mail já está em uso'\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <Header></Header>\r\n                <div className=\"container\">\r\n                    <h1 className=\"text-center display-4 my-4\">Criar Conta</h1>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"email\">Email:</label>\r\n                            <input type=\"text\" id=\"email\" className=\"form-control\" onChange={this.handleChange('email')} placeholder=\"Digite seu email\" />\r\n                        </div>\r\n                        <div className=\"col-6\">\r\n                            <label htmlFor=\"pass\">Senha</label>\r\n                            <input type=\"password\" id=\"pass\" className=\"form-control\" onChange={this.handleChange('pass')} placeholder=\"Digite sua senha\" />\r\n                        </div>\r\n                    </div>\r\n                    {\r\n                        this.props.isSignUpError &&\r\n                        <div>\r\n                            <div class=\"notif notif--error\">\r\n                                <div class=\"notif__content\"><i class=\"material-icons notif__icon\">error</i>\r\n                                    <div>\r\n                                        <h1 class=\"notif__title\">Erro ao cadastrar</h1>\r\n                                        <span class=\"notif__subtitle\">{errorMensages[this.props.signUpError]}</span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    <div className=\"row my-4\">\r\n                        <div className=\"col-2\"></div>\r\n                        <div className=\"col-4\">\r\n                            <button type=\"button\" className=\"button\" onClick={this.createAccount}>Criar conta</button>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <button type=\"button\" className=\"button\" onClick={() => this.props.changeScreen('login')}>Já tenho uma conta, entrar!</button>\r\n                        </div>\r\n                        <div className=\"col-2\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignUp","import React from 'react'\r\nimport '../css/User.css'\r\n\r\nconst User = props => {\r\n    return (\r\n        <div>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light mb-4\">\r\n                <div class=\"container\">\r\n                    <a class=\"navbar-brand\">CommmentApp</a>\r\n                    Logado como: {props.email}\r\n                    <button onClick={props.logout} className=\"exit-btn\"><i className=\"material-icons\">exit_to_app</i></button>\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import firebase from 'firebase/app'\r\nimport 'firebase/database'\r\nimport 'firebase/auth'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCl_gXoAcO_nDVOs5LsfSS59vwD8hEo58Q\",\r\n    authDomain: \"comments-react-53132.firebaseapp.com\",\r\n    databaseURL: \"https://comments-react-53132.firebaseio.com\",\r\n    projectId: \"comments-react-53132\",\r\n    storageBucket: \"comments-react-53132.appspot.com\",\r\n    messagingSenderId: \"155358327450\",\r\n    appId: \"1:155358327450:web:e2dde1b8d57cfd14586523\",\r\n    measurementId: \"G-CHLPW5VSTY\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const database = firebase.database()\r\nexport const auth = firebase.auth()","import React, { Component } from 'react'\nimport Comments from './components/Comments'\nimport NewComment from './components/NewComment'\nimport Login from './components/Login'\nimport SignUp from './components/SignUp'\nimport User from './components/User'\nimport 'bootstrap-css-only'\nimport './css/App.css'\nimport './css/Login.css'\nimport './css/SignUp.css'\nimport 'material-icons'\n\n\nimport { database, auth } from './firebase'\n\nclass App extends Component {\n  state = {\n    comments: {},\n    isLoading: false,\n    isAuth: false,\n    isAuthError: false,\n    authError: '',\n    isSignUpError: false,\n    signUpError: '',\n    user: {},\n    userScreen: 'login'\n  }\n\n  sendComment = comment => {\n    const id = database.ref().child('comments').push().key\n    const comments = {}\n    comments['comments/' + id] = {\n      comment,\n      email: this.state.user.email,\n      userId: this.state.user.uid\n    }\n\n    database.ref().update(comments)\n  }\n\n  login = async (email, pass) => {\n    const { auth } = this.props\n\n    this.setState({\n      isAuthError: false,\n      authError: ''\n    })\n\n    // Try Catch para tentar realizar o login\n    try {\n      await auth.signInWithEmailAndPassword(email, pass)\n      // console.log('Logar: ', email, pass)\n    } catch (error) {\n      this.setState({\n        isAuthError: true,\n        authError: error.code\n      })\n    }\n  }\n\n  createAccount = async (email, pass) => {\n    const { auth } = this.props\n\n    this.setState({\n      signUpError: '',\n      isSignUpError: false\n    })\n\n    // Try Catch para tentar realizar o cadastro\n    try {\n      await auth.createUserWithEmailAndPassword(email, pass)\n      console.log('Cadastrar: ', email, pass)\n    } catch (error) {\n      this.setState({\n        isSignUpError: true,\n        signUpError: error.code\n      })\n    }\n  }\n\n  componentDidMount() {\n    const { database, auth } = this.props\n    this.setState({ isLoading: true })\n    this.comments = database.ref('comments')\n    this.comments.on('value', snapshot => {\n      this.setState({\n        comments: snapshot.val(),\n        isLoading: false\n      })\n    })\n\n    auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({\n          isAuth: true,\n          user,\n        })\n      } else {\n        this.setState({\n          isAuth: false,\n          user: {}\n        })\n      }\n      console.log(user)\n    })\n  }\n\n  logout = async () => {\n    const { auth } = await this.props\n    auth.signOut()\n  }\n  \n  changeScreen = (screen) => {\n    this.setState({\n      userScreen: screen\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.isAuth && <User email={this.state.user.email} logout={this.logout} />}\n\n        {!this.state.isAuth && this.state.userScreen === 'login' &&\n          <Login login={this.login} isAuthError={this.state.isAuthError} authError={this.state.authError} changeScreen={this.changeScreen}/>\n        }\n\n        {!this.state.isAuth && this.state.userScreen === 'signUp' &&\n          <SignUp createAccount={this.createAccount} isSignUpError={this.state.isSignUpError} signUpError={this.state.signUpError} changeScreen={this.changeScreen}/>\n        }\n\n        {this.state.isAuth && <NewComment sendComment={this.sendComment} newComments={this.state.newComments} />}\n\n        <Comments comments={this.state.comments} />\n\n        {this.state.isLoading && <p>Carregando...</p>}\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { database, auth } from './firebase'\n\nReactDOM.render(<App  database={database} auth={auth} />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}